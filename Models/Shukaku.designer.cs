#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShukakuApi.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Shukaku")]
	public partial class ShukakuDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGeneralPromo(GeneralPromo instance);
    partial void UpdateGeneralPromo(GeneralPromo instance);
    partial void DeleteGeneralPromo(GeneralPromo instance);
    partial void InsertMenu(Menu instance);
    partial void UpdateMenu(Menu instance);
    partial void DeleteMenu(Menu instance);
    partial void InsertMenuRating(MenuRating instance);
    partial void UpdateMenuRating(MenuRating instance);
    partial void DeleteMenuRating(MenuRating instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertCart(Cart instance);
    partial void UpdateCart(Cart instance);
    partial void DeleteCart(Cart instance);
    partial void InsertBranch(Branch instance);
    partial void UpdateBranch(Branch instance);
    partial void DeleteBranch(Branch instance);
    #endregion
		
		public ShukakuDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShukakuDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShukakuDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShukakuDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<GeneralPromo> GeneralPromos
		{
			get
			{
				return this.GetTable<GeneralPromo>();
			}
		}
		
		public System.Data.Linq.Table<Menu> Menus
		{
			get
			{
				return this.GetTable<Menu>();
			}
		}
		
		public System.Data.Linq.Table<MenuRating> MenuRatings
		{
			get
			{
				return this.GetTable<MenuRating>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Cart> Carts
		{
			get
			{
				return this.GetTable<Cart>();
			}
		}
		
		public System.Data.Linq.Table<Branch> Branches
		{
			get
			{
				return this.GetTable<Branch>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeneralPromo")]
	public partial class GeneralPromo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PromoCode;
		
		private System.DateTime _PromoStartDate;
		
		private System.DateTime _PromoEndDate;
		
		private bool _IsDeleted;
		
		private int _DiscountValue;
		
		private bool _IsActive;
		
		private bool _IsPromo;
		
		private string _DiscountType;
		
		private int _BranchID;
		
		private int _Buy;
		
		private int _Get;
		
		private string _PromoTitle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPromoCodeChanging(string value);
    partial void OnPromoCodeChanged();
    partial void OnPromoStartDateChanging(System.DateTime value);
    partial void OnPromoStartDateChanged();
    partial void OnPromoEndDateChanging(System.DateTime value);
    partial void OnPromoEndDateChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnDiscountValueChanging(int value);
    partial void OnDiscountValueChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsPromoChanging(bool value);
    partial void OnIsPromoChanged();
    partial void OnDiscountTypeChanging(string value);
    partial void OnDiscountTypeChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnBuyChanging(int value);
    partial void OnBuyChanged();
    partial void OnGetChanging(int value);
    partial void OnGetChanged();
    partial void OnPromoTitleChanging(string value);
    partial void OnPromoTitleChanged();
    #endregion
		
		public GeneralPromo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PromoCode
		{
			get
			{
				return this._PromoCode;
			}
			set
			{
				if ((this._PromoCode != value))
				{
					this.OnPromoCodeChanging(value);
					this.SendPropertyChanging();
					this._PromoCode = value;
					this.SendPropertyChanged("PromoCode");
					this.OnPromoCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime PromoStartDate
		{
			get
			{
				return this._PromoStartDate;
			}
			set
			{
				if ((this._PromoStartDate != value))
				{
					this.OnPromoStartDateChanging(value);
					this.SendPropertyChanging();
					this._PromoStartDate = value;
					this.SendPropertyChanged("PromoStartDate");
					this.OnPromoStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoEndDate", DbType="DateTime NOT NULL")]
		public System.DateTime PromoEndDate
		{
			get
			{
				return this._PromoEndDate;
			}
			set
			{
				if ((this._PromoEndDate != value))
				{
					this.OnPromoEndDateChanging(value);
					this.SendPropertyChanging();
					this._PromoEndDate = value;
					this.SendPropertyChanged("PromoEndDate");
					this.OnPromoEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountValue", DbType="Int NOT NULL")]
		public int DiscountValue
		{
			get
			{
				return this._DiscountValue;
			}
			set
			{
				if ((this._DiscountValue != value))
				{
					this.OnDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._DiscountValue = value;
					this.SendPropertyChanged("DiscountValue");
					this.OnDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPromo", DbType="Bit NOT NULL")]
		public bool IsPromo
		{
			get
			{
				return this._IsPromo;
			}
			set
			{
				if ((this._IsPromo != value))
				{
					this.OnIsPromoChanging(value);
					this.SendPropertyChanging();
					this._IsPromo = value;
					this.SendPropertyChanged("IsPromo");
					this.OnIsPromoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DiscountType
		{
			get
			{
				return this._DiscountType;
			}
			set
			{
				if ((this._DiscountType != value))
				{
					this.OnDiscountTypeChanging(value);
					this.SendPropertyChanging();
					this._DiscountType = value;
					this.SendPropertyChanged("DiscountType");
					this.OnDiscountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Buy", DbType="Int NOT NULL")]
		public int Buy
		{
			get
			{
				return this._Buy;
			}
			set
			{
				if ((this._Buy != value))
				{
					this.OnBuyChanging(value);
					this.SendPropertyChanging();
					this._Buy = value;
					this.SendPropertyChanged("Buy");
					this.OnBuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Get", DbType="Int NOT NULL")]
		public int Get
		{
			get
			{
				return this._Get;
			}
			set
			{
				if ((this._Get != value))
				{
					this.OnGetChanging(value);
					this.SendPropertyChanging();
					this._Get = value;
					this.SendPropertyChanged("Get");
					this.OnGetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoTitle", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string PromoTitle
		{
			get
			{
				return this._PromoTitle;
			}
			set
			{
				if ((this._PromoTitle != value))
				{
					this.OnPromoTitleChanging(value);
					this.SendPropertyChanging();
					this._PromoTitle = value;
					this.SendPropertyChanged("PromoTitle");
					this.OnPromoTitleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menu")]
	public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MenuName;
		
		private string _MenuDescription;
		
		private string _MenuPhotoPath;
		
		private bool _IsActive;
		
		private decimal _Price;
		
		private int _SortingOrder;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private bool _IsDeleted;
		
		private decimal _PriceSenior;
		
		private decimal _PriceChildren;
		
		private int _Discount;
		
		private string _MenuButtonPath;
		
		private System.DateTime _DiscountStartDate;
		
		private System.DateTime _DiscountEndDate;
		
		private bool _DiscountIsActive;
		
		private int _MinPax;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<Cart> _Carts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnMenuDescriptionChanging(string value);
    partial void OnMenuDescriptionChanged();
    partial void OnMenuPhotoPathChanging(string value);
    partial void OnMenuPhotoPathChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnSortingOrderChanging(int value);
    partial void OnSortingOrderChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnPriceSeniorChanging(decimal value);
    partial void OnPriceSeniorChanged();
    partial void OnPriceChildrenChanging(decimal value);
    partial void OnPriceChildrenChanged();
    partial void OnDiscountChanging(int value);
    partial void OnDiscountChanged();
    partial void OnMenuButtonPathChanging(string value);
    partial void OnMenuButtonPathChanged();
    partial void OnDiscountStartDateChanging(System.DateTime value);
    partial void OnDiscountStartDateChanged();
    partial void OnDiscountEndDateChanging(System.DateTime value);
    partial void OnDiscountEndDateChanged();
    partial void OnDiscountIsActiveChanging(bool value);
    partial void OnDiscountIsActiveChanged();
    partial void OnMinPaxChanging(int value);
    partial void OnMinPaxChanged();
    #endregion
		
		public Menu()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Carts = new EntitySet<Cart>(new Action<Cart>(this.attach_Carts), new Action<Cart>(this.detach_Carts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MenuDescription
		{
			get
			{
				return this._MenuDescription;
			}
			set
			{
				if ((this._MenuDescription != value))
				{
					this.OnMenuDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MenuDescription = value;
					this.SendPropertyChanged("MenuDescription");
					this.OnMenuDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuPhotoPath", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string MenuPhotoPath
		{
			get
			{
				return this._MenuPhotoPath;
			}
			set
			{
				if ((this._MenuPhotoPath != value))
				{
					this.OnMenuPhotoPathChanging(value);
					this.SendPropertyChanging();
					this._MenuPhotoPath = value;
					this.SendPropertyChanged("MenuPhotoPath");
					this.OnMenuPhotoPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortingOrder", DbType="Int NOT NULL")]
		public int SortingOrder
		{
			get
			{
				return this._SortingOrder;
			}
			set
			{
				if ((this._SortingOrder != value))
				{
					this.OnSortingOrderChanging(value);
					this.SendPropertyChanging();
					this._SortingOrder = value;
					this.SendPropertyChanged("SortingOrder");
					this.OnSortingOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceSenior", DbType="Money NOT NULL")]
		public decimal PriceSenior
		{
			get
			{
				return this._PriceSenior;
			}
			set
			{
				if ((this._PriceSenior != value))
				{
					this.OnPriceSeniorChanging(value);
					this.SendPropertyChanging();
					this._PriceSenior = value;
					this.SendPropertyChanged("PriceSenior");
					this.OnPriceSeniorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceChildren", DbType="Money NOT NULL")]
		public decimal PriceChildren
		{
			get
			{
				return this._PriceChildren;
			}
			set
			{
				if ((this._PriceChildren != value))
				{
					this.OnPriceChildrenChanging(value);
					this.SendPropertyChanging();
					this._PriceChildren = value;
					this.SendPropertyChanged("PriceChildren");
					this.OnPriceChildrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Int NOT NULL")]
		public int Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuButtonPath", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string MenuButtonPath
		{
			get
			{
				return this._MenuButtonPath;
			}
			set
			{
				if ((this._MenuButtonPath != value))
				{
					this.OnMenuButtonPathChanging(value);
					this.SendPropertyChanging();
					this._MenuButtonPath = value;
					this.SendPropertyChanged("MenuButtonPath");
					this.OnMenuButtonPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime DiscountStartDate
		{
			get
			{
				return this._DiscountStartDate;
			}
			set
			{
				if ((this._DiscountStartDate != value))
				{
					this.OnDiscountStartDateChanging(value);
					this.SendPropertyChanging();
					this._DiscountStartDate = value;
					this.SendPropertyChanged("DiscountStartDate");
					this.OnDiscountStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountEndDate", DbType="DateTime NOT NULL")]
		public System.DateTime DiscountEndDate
		{
			get
			{
				return this._DiscountEndDate;
			}
			set
			{
				if ((this._DiscountEndDate != value))
				{
					this.OnDiscountEndDateChanging(value);
					this.SendPropertyChanging();
					this._DiscountEndDate = value;
					this.SendPropertyChanged("DiscountEndDate");
					this.OnDiscountEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountIsActive", DbType="Bit NOT NULL")]
		public bool DiscountIsActive
		{
			get
			{
				return this._DiscountIsActive;
			}
			set
			{
				if ((this._DiscountIsActive != value))
				{
					this.OnDiscountIsActiveChanging(value);
					this.SendPropertyChanging();
					this._DiscountIsActive = value;
					this.SendPropertyChanged("DiscountIsActive");
					this.OnDiscountIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPax", DbType="Int NOT NULL")]
		public int MinPax
		{
			get
			{
				return this._MinPax;
			}
			set
			{
				if ((this._MinPax != value))
				{
					this.OnMinPaxChanging(value);
					this.SendPropertyChanging();
					this._MinPax = value;
					this.SendPropertyChanged("MinPax");
					this.OnMinPaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Order", Storage="_Orders", ThisKey="ID", OtherKey="MenuID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Cart", Storage="_Carts", ThisKey="ID", OtherKey="MenuID")]
		public EntitySet<Cart> Carts
		{
			get
			{
				return this._Carts;
			}
			set
			{
				this._Carts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Menu = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Menu = null;
		}
		
		private void attach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.Menu = this;
		}
		
		private void detach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.Menu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenuRating")]
	public partial class MenuRating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MenuID;
		
		private decimal _RatingValue;
		
		private int _UserID;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateModified;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMenuIDChanging(int value);
    partial void OnMenuIDChanged();
    partial void OnRatingValueChanging(decimal value);
    partial void OnRatingValueChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public MenuRating()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="Int NOT NULL")]
		public int MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingValue", DbType="Decimal(18,0) NOT NULL")]
		public decimal RatingValue
		{
			get
			{
				return this._RatingValue;
			}
			set
			{
				if ((this._RatingValue != value))
				{
					this.OnRatingValueChanging(value);
					this.SendPropertyChanging();
					this._RatingValue = value;
					this.SendPropertyChanged("RatingValue");
					this.OnRatingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private int _MenuID;
		
		private int _Pax;
		
		private System.DateTime _OrderDate;
		
		private decimal _SubTotal;
		
		private bool _OrderCompleted;
		
		private string _OrderStatus;
		
		private System.DateTime _OrderForDate;
		
		private int _BranchID;
		
		private decimal _OrderTotal;
		
		private string _MidtransOrderID;
		
		private string _MidtransTransactionStatus;
		
		private int _SeniorPax;
		
		private int _ChildrenPax;
		
		private string _MidtransToken;
		
		private string _MidtransUpdate;
		
		private System.DateTime _MidtransUpdateDateTime;
		
		private decimal _PB1;
		
		private decimal _ServiceCharge;
		
		private int _DiscountApplied;
		
		private string _PromoCodeApplied;
		
		private decimal _DiscountAmount;
		
		private decimal _SubTotalAfterDiscount;
		
		private int _PromoID;
		
		private int _OldBranchID;
		
		private System.DateTime _ChangeBranchDateTime;
		
		private EntityRef<Menu> _Menu;
		
		private EntityRef<User> _User;
		
		private EntityRef<Branch> _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnMenuIDChanging(int value);
    partial void OnMenuIDChanged();
    partial void OnPaxChanging(int value);
    partial void OnPaxChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnSubTotalChanging(decimal value);
    partial void OnSubTotalChanged();
    partial void OnOrderCompletedChanging(bool value);
    partial void OnOrderCompletedChanged();
    partial void OnOrderStatusChanging(string value);
    partial void OnOrderStatusChanged();
    partial void OnOrderForDateChanging(System.DateTime value);
    partial void OnOrderForDateChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnOrderTotalChanging(decimal value);
    partial void OnOrderTotalChanged();
    partial void OnMidtransOrderIDChanging(string value);
    partial void OnMidtransOrderIDChanged();
    partial void OnMidtransTransactionStatusChanging(string value);
    partial void OnMidtransTransactionStatusChanged();
    partial void OnSeniorPaxChanging(int value);
    partial void OnSeniorPaxChanged();
    partial void OnChildrenPaxChanging(int value);
    partial void OnChildrenPaxChanged();
    partial void OnMidtransTokenChanging(string value);
    partial void OnMidtransTokenChanged();
    partial void OnMidtransUpdateChanging(string value);
    partial void OnMidtransUpdateChanged();
    partial void OnMidtransUpdateDateTimeChanging(System.DateTime value);
    partial void OnMidtransUpdateDateTimeChanged();
    partial void OnPB1Changing(decimal value);
    partial void OnPB1Changed();
    partial void OnServiceChargeChanging(decimal value);
    partial void OnServiceChargeChanged();
    partial void OnDiscountAppliedChanging(int value);
    partial void OnDiscountAppliedChanged();
    partial void OnPromoCodeAppliedChanging(string value);
    partial void OnPromoCodeAppliedChanged();
    partial void OnDiscountAmountChanging(decimal value);
    partial void OnDiscountAmountChanged();
    partial void OnSubTotalAfterDiscountChanging(decimal value);
    partial void OnSubTotalAfterDiscountChanged();
    partial void OnPromoIDChanging(int value);
    partial void OnPromoIDChanged();
    partial void OnOldBranchIDChanging(int value);
    partial void OnOldBranchIDChanged();
    partial void OnChangeBranchDateTimeChanging(System.DateTime value);
    partial void OnChangeBranchDateTimeChanged();
    #endregion
		
		public Order()
		{
			this._Menu = default(EntityRef<Menu>);
			this._User = default(EntityRef<User>);
			this._Branch = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="Int NOT NULL")]
		public int MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					if (this._Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pax", DbType="Int NOT NULL")]
		public int Pax
		{
			get
			{
				return this._Pax;
			}
			set
			{
				if ((this._Pax != value))
				{
					this.OnPaxChanging(value);
					this.SendPropertyChanging();
					this._Pax = value;
					this.SendPropertyChanged("Pax");
					this.OnPaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime NOT NULL")]
		public System.DateTime OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTotal", DbType="Money NOT NULL")]
		public decimal SubTotal
		{
			get
			{
				return this._SubTotal;
			}
			set
			{
				if ((this._SubTotal != value))
				{
					this.OnSubTotalChanging(value);
					this.SendPropertyChanging();
					this._SubTotal = value;
					this.SendPropertyChanged("SubTotal");
					this.OnSubTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCompleted", DbType="Bit NOT NULL")]
		public bool OrderCompleted
		{
			get
			{
				return this._OrderCompleted;
			}
			set
			{
				if ((this._OrderCompleted != value))
				{
					this.OnOrderCompletedChanging(value);
					this.SendPropertyChanging();
					this._OrderCompleted = value;
					this.SendPropertyChanged("OrderCompleted");
					this.OnOrderCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderStatus
		{
			get
			{
				return this._OrderStatus;
			}
			set
			{
				if ((this._OrderStatus != value))
				{
					this.OnOrderStatusChanging(value);
					this.SendPropertyChanging();
					this._OrderStatus = value;
					this.SendPropertyChanged("OrderStatus");
					this.OnOrderStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderForDate", DbType="DateTime NOT NULL")]
		public System.DateTime OrderForDate
		{
			get
			{
				return this._OrderForDate;
			}
			set
			{
				if ((this._OrderForDate != value))
				{
					this.OnOrderForDateChanging(value);
					this.SendPropertyChanging();
					this._OrderForDate = value;
					this.SendPropertyChanged("OrderForDate");
					this.OnOrderForDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderTotal", DbType="Money NOT NULL")]
		public decimal OrderTotal
		{
			get
			{
				return this._OrderTotal;
			}
			set
			{
				if ((this._OrderTotal != value))
				{
					this.OnOrderTotalChanging(value);
					this.SendPropertyChanging();
					this._OrderTotal = value;
					this.SendPropertyChanged("OrderTotal");
					this.OnOrderTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MidtransOrderID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MidtransOrderID
		{
			get
			{
				return this._MidtransOrderID;
			}
			set
			{
				if ((this._MidtransOrderID != value))
				{
					this.OnMidtransOrderIDChanging(value);
					this.SendPropertyChanging();
					this._MidtransOrderID = value;
					this.SendPropertyChanged("MidtransOrderID");
					this.OnMidtransOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MidtransTransactionStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MidtransTransactionStatus
		{
			get
			{
				return this._MidtransTransactionStatus;
			}
			set
			{
				if ((this._MidtransTransactionStatus != value))
				{
					this.OnMidtransTransactionStatusChanging(value);
					this.SendPropertyChanging();
					this._MidtransTransactionStatus = value;
					this.SendPropertyChanged("MidtransTransactionStatus");
					this.OnMidtransTransactionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeniorPax", DbType="Int NOT NULL")]
		public int SeniorPax
		{
			get
			{
				return this._SeniorPax;
			}
			set
			{
				if ((this._SeniorPax != value))
				{
					this.OnSeniorPaxChanging(value);
					this.SendPropertyChanging();
					this._SeniorPax = value;
					this.SendPropertyChanged("SeniorPax");
					this.OnSeniorPaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildrenPax", DbType="Int NOT NULL")]
		public int ChildrenPax
		{
			get
			{
				return this._ChildrenPax;
			}
			set
			{
				if ((this._ChildrenPax != value))
				{
					this.OnChildrenPaxChanging(value);
					this.SendPropertyChanging();
					this._ChildrenPax = value;
					this.SendPropertyChanged("ChildrenPax");
					this.OnChildrenPaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MidtransToken", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string MidtransToken
		{
			get
			{
				return this._MidtransToken;
			}
			set
			{
				if ((this._MidtransToken != value))
				{
					this.OnMidtransTokenChanging(value);
					this.SendPropertyChanging();
					this._MidtransToken = value;
					this.SendPropertyChanged("MidtransToken");
					this.OnMidtransTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MidtransUpdate", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MidtransUpdate
		{
			get
			{
				return this._MidtransUpdate;
			}
			set
			{
				if ((this._MidtransUpdate != value))
				{
					this.OnMidtransUpdateChanging(value);
					this.SendPropertyChanging();
					this._MidtransUpdate = value;
					this.SendPropertyChanged("MidtransUpdate");
					this.OnMidtransUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MidtransUpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime MidtransUpdateDateTime
		{
			get
			{
				return this._MidtransUpdateDateTime;
			}
			set
			{
				if ((this._MidtransUpdateDateTime != value))
				{
					this.OnMidtransUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._MidtransUpdateDateTime = value;
					this.SendPropertyChanged("MidtransUpdateDateTime");
					this.OnMidtransUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PB1", DbType="Money NOT NULL")]
		public decimal PB1
		{
			get
			{
				return this._PB1;
			}
			set
			{
				if ((this._PB1 != value))
				{
					this.OnPB1Changing(value);
					this.SendPropertyChanging();
					this._PB1 = value;
					this.SendPropertyChanged("PB1");
					this.OnPB1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCharge", DbType="Money NOT NULL")]
		public decimal ServiceCharge
		{
			get
			{
				return this._ServiceCharge;
			}
			set
			{
				if ((this._ServiceCharge != value))
				{
					this.OnServiceChargeChanging(value);
					this.SendPropertyChanging();
					this._ServiceCharge = value;
					this.SendPropertyChanged("ServiceCharge");
					this.OnServiceChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountApplied", DbType="Int NOT NULL")]
		public int DiscountApplied
		{
			get
			{
				return this._DiscountApplied;
			}
			set
			{
				if ((this._DiscountApplied != value))
				{
					this.OnDiscountAppliedChanging(value);
					this.SendPropertyChanging();
					this._DiscountApplied = value;
					this.SendPropertyChanged("DiscountApplied");
					this.OnDiscountAppliedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoCodeApplied", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PromoCodeApplied
		{
			get
			{
				return this._PromoCodeApplied;
			}
			set
			{
				if ((this._PromoCodeApplied != value))
				{
					this.OnPromoCodeAppliedChanging(value);
					this.SendPropertyChanging();
					this._PromoCodeApplied = value;
					this.SendPropertyChanged("PromoCodeApplied");
					this.OnPromoCodeAppliedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Money NOT NULL")]
		public decimal DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTotalAfterDiscount", DbType="Money NOT NULL")]
		public decimal SubTotalAfterDiscount
		{
			get
			{
				return this._SubTotalAfterDiscount;
			}
			set
			{
				if ((this._SubTotalAfterDiscount != value))
				{
					this.OnSubTotalAfterDiscountChanging(value);
					this.SendPropertyChanging();
					this._SubTotalAfterDiscount = value;
					this.SendPropertyChanged("SubTotalAfterDiscount");
					this.OnSubTotalAfterDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoID", DbType="Int NOT NULL")]
		public int PromoID
		{
			get
			{
				return this._PromoID;
			}
			set
			{
				if ((this._PromoID != value))
				{
					this.OnPromoIDChanging(value);
					this.SendPropertyChanging();
					this._PromoID = value;
					this.SendPropertyChanged("PromoID");
					this.OnPromoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldBranchID", DbType="Int NOT NULL")]
		public int OldBranchID
		{
			get
			{
				return this._OldBranchID;
			}
			set
			{
				if ((this._OldBranchID != value))
				{
					this.OnOldBranchIDChanging(value);
					this.SendPropertyChanging();
					this._OldBranchID = value;
					this.SendPropertyChanged("OldBranchID");
					this.OnOldBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeBranchDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime ChangeBranchDateTime
		{
			get
			{
				return this._ChangeBranchDateTime;
			}
			set
			{
				if ((this._ChangeBranchDateTime != value))
				{
					this.OnChangeBranchDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ChangeBranchDateTime = value;
					this.SendPropertyChanged("ChangeBranchDateTime");
					this.OnChangeBranchDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Order", Storage="_Menu", ThisKey="MenuID", OtherKey="ID", IsForeignKey=true)]
		public Menu Menu
		{
			get
			{
				return this._Menu.Entity;
			}
			set
			{
				Menu previousValue = this._Menu.Entity;
				if (((previousValue != value) 
							|| (this._Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Menu.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._MenuID = value.ID;
					}
					else
					{
						this._MenuID = default(int);
					}
					this.SendPropertyChanged("Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Order", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _FullName;
		
		private bool _PhoneNumberValidated;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private string _Address;
		
		private string _City;
		
		private string _PostCode;
		
		private string _Kelurahan;
		
		private string _Kecamatan;
		
		private string _Province;
		
		private string _LastName;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<Cart> _Carts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnPhoneNumberValidatedChanging(bool value);
    partial void OnPhoneNumberValidatedChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnKelurahanChanging(string value);
    partial void OnKelurahanChanged();
    partial void OnKecamatanChanging(string value);
    partial void OnKecamatanChanged();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    #endregion
		
		public User()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Carts = new EntitySet<Cart>(new Action<Cart>(this.attach_Carts), new Action<Cart>(this.detach_Carts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberValidated", DbType="Bit NOT NULL")]
		public bool PhoneNumberValidated
		{
			get
			{
				return this._PhoneNumberValidated;
			}
			set
			{
				if ((this._PhoneNumberValidated != value))
				{
					this.OnPhoneNumberValidatedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberValidated = value;
					this.SendPropertyChanged("PhoneNumberValidated");
					this.OnPhoneNumberValidatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kelurahan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Kelurahan
		{
			get
			{
				return this._Kelurahan;
			}
			set
			{
				if ((this._Kelurahan != value))
				{
					this.OnKelurahanChanging(value);
					this.SendPropertyChanging();
					this._Kelurahan = value;
					this.SendPropertyChanged("Kelurahan");
					this.OnKelurahanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kecamatan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Kecamatan
		{
			get
			{
				return this._Kecamatan;
			}
			set
			{
				if ((this._Kecamatan != value))
				{
					this.OnKecamatanChanging(value);
					this.SendPropertyChanging();
					this._Kecamatan = value;
					this.SendPropertyChanged("Kecamatan");
					this.OnKecamatanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this.OnProvinceChanging(value);
					this.SendPropertyChanging();
					this._Province = value;
					this.SendPropertyChanged("Province");
					this.OnProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_Orders", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Cart", Storage="_Carts", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<Cart> Carts
		{
			get
			{
				return this._Carts;
			}
			set
			{
				this._Carts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cart")]
	public partial class Cart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private int _MenuID;
		
		private int _Pax;
		
		private int _PaxSenior;
		
		private int _PaxChildren;
		
		private int _BranchID;
		
		private EntityRef<Menu> _Menu;
		
		private EntityRef<User> _User;
		
		private EntityRef<Branch> _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnMenuIDChanging(int value);
    partial void OnMenuIDChanged();
    partial void OnPaxChanging(int value);
    partial void OnPaxChanged();
    partial void OnPaxSeniorChanging(int value);
    partial void OnPaxSeniorChanged();
    partial void OnPaxChildrenChanging(int value);
    partial void OnPaxChildrenChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    #endregion
		
		public Cart()
		{
			this._Menu = default(EntityRef<Menu>);
			this._User = default(EntityRef<User>);
			this._Branch = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="Int NOT NULL")]
		public int MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					if (this._Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pax", DbType="Int NOT NULL")]
		public int Pax
		{
			get
			{
				return this._Pax;
			}
			set
			{
				if ((this._Pax != value))
				{
					this.OnPaxChanging(value);
					this.SendPropertyChanging();
					this._Pax = value;
					this.SendPropertyChanged("Pax");
					this.OnPaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaxSenior", DbType="Int NOT NULL")]
		public int PaxSenior
		{
			get
			{
				return this._PaxSenior;
			}
			set
			{
				if ((this._PaxSenior != value))
				{
					this.OnPaxSeniorChanging(value);
					this.SendPropertyChanging();
					this._PaxSenior = value;
					this.SendPropertyChanged("PaxSenior");
					this.OnPaxSeniorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaxChildren", DbType="Int NOT NULL")]
		public int PaxChildren
		{
			get
			{
				return this._PaxChildren;
			}
			set
			{
				if ((this._PaxChildren != value))
				{
					this.OnPaxChildrenChanging(value);
					this.SendPropertyChanging();
					this._PaxChildren = value;
					this.SendPropertyChanged("PaxChildren");
					this.OnPaxChildrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Cart", Storage="_Menu", ThisKey="MenuID", OtherKey="ID", IsForeignKey=true)]
		public Menu Menu
		{
			get
			{
				return this._Menu.Entity;
			}
			set
			{
				Menu previousValue = this._Menu.Entity;
				if (((previousValue != value) 
							|| (this._Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu.Entity = null;
						previousValue.Carts.Remove(this);
					}
					this._Menu.Entity = value;
					if ((value != null))
					{
						value.Carts.Add(this);
						this._MenuID = value.ID;
					}
					else
					{
						this._MenuID = default(int);
					}
					this.SendPropertyChanged("Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Cart", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Carts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Carts.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Cart", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.Carts.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.Carts.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branch")]
	public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BranchName;
		
		private string _City;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _MaxOnlineOrderPax;
		
		private int _TotalPax;
		
		private int _TotalPaxOnline;
		
		private bool _IsActive;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<Cart> _Carts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnMaxOnlineOrderPaxChanging(int value);
    partial void OnMaxOnlineOrderPaxChanged();
    partial void OnTotalPaxChanging(int value);
    partial void OnTotalPaxChanged();
    partial void OnTotalPaxOnlineChanging(int value);
    partial void OnTotalPaxOnlineChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Branch()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Carts = new EntitySet<Cart>(new Action<Cart>(this.attach_Carts), new Action<Cart>(this.detach_Carts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxOnlineOrderPax", DbType="Int NOT NULL")]
		public int MaxOnlineOrderPax
		{
			get
			{
				return this._MaxOnlineOrderPax;
			}
			set
			{
				if ((this._MaxOnlineOrderPax != value))
				{
					this.OnMaxOnlineOrderPaxChanging(value);
					this.SendPropertyChanging();
					this._MaxOnlineOrderPax = value;
					this.SendPropertyChanged("MaxOnlineOrderPax");
					this.OnMaxOnlineOrderPaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPax", DbType="Int NOT NULL")]
		public int TotalPax
		{
			get
			{
				return this._TotalPax;
			}
			set
			{
				if ((this._TotalPax != value))
				{
					this.OnTotalPaxChanging(value);
					this.SendPropertyChanging();
					this._TotalPax = value;
					this.SendPropertyChanged("TotalPax");
					this.OnTotalPaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPaxOnline", DbType="Int NOT NULL")]
		public int TotalPaxOnline
		{
			get
			{
				return this._TotalPaxOnline;
			}
			set
			{
				if ((this._TotalPaxOnline != value))
				{
					this.OnTotalPaxOnlineChanging(value);
					this.SendPropertyChanging();
					this._TotalPaxOnline = value;
					this.SendPropertyChanged("TotalPaxOnline");
					this.OnTotalPaxOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Order", Storage="_Orders", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Cart", Storage="_Carts", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<Cart> Carts
		{
			get
			{
				return this._Carts;
			}
			set
			{
				this._Carts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
	}
}
#pragma warning restore 1591
